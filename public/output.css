/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@import url(https://fonts.bunny.net/css?family=ibm-plex-mono:400,500,600|ibm-plex-sans:400,700);
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: 'IBM Plex Mono';
    --color-neutral-50: hsl(210, 36%, 96%);
    --color-neutral-100: hsl(212, 33%, 89%);
    --color-neutral-200: hsl(210, 31%, 80%);
    --color-neutral-300: hsl(211, 27%, 70%);
    --color-neutral-400: hsl(209, 23%, 60%);
    --color-neutral-600: hsl(209, 28%, 39%);
    --color-neutral-700: hsl(209, 34%, 30%);
    --color-neutral-800: hsl(211, 39%, 23%);
    --color-neutral-900: hsl(209, 61%, 16%);
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-3xs: 16rem;
    --container-2xs: 18rem;
    --container-xs: 20rem;
    --container-xl: 36rem;
    --container-3xl: 48rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --radius-lg: 0.5rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-plex: 'IBM Plex Sans';
    --color-primary-900: hsl(245, 100%, 27%);
    --color-primary-800: hsl(245, 86%, 40%);
    --color-primary-700: hsl(245, 79%, 52%);
    --color-primary-600: hsl(245, 92%, 60%);
    --color-primary-500: hsl(243, 94%, 66%);
    --color-primary-200: hsl(238, 94%, 81%);
    --color-primary-100: hsl(238, 100%, 88%);
    --color-primary-50: hsl(240, 100%, 95%);
    --color-success-400: hsl(160, 51%, 49%);
    --color-error-700: hsl(352, 90%, 35%);
    --color-error-600: hsl(354, 85%, 44%);
    --color-error-400: hsl(360, 83%, 62%);
    --color-error-50: hsl(360, 100%, 95%);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .-top-16 {
    top: calc(var(--spacing) * -16);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .right-\[24px\] {
    right: 24px;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-\[-100\%\] {
    left: -100%;
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .-mt-5 {
    margin-top: calc(var(--spacing) * -5);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-2\.5 {
    margin-top: calc(var(--spacing) * 2.5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }
  .mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }
  .mr-5 {
    margin-right: calc(var(--spacing) * 5);
  }
  .mb-2\.5 {
    margin-bottom: calc(var(--spacing) * 2.5);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-18 {
    margin-bottom: calc(var(--spacing) * 18);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .ml-\[30\%\] {
    margin-left: 30%;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-7 {
    width: calc(var(--spacing) * 7);
    height: calc(var(--spacing) * 7);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-22 {
    height: calc(var(--spacing) * 22);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-\[var\(--row-expense-open\)\] {
    height: var(--row-expense-open);
  }
  .h-\[var\(--row-location-open\)\] {
    height: var(--row-location-open);
  }
  .h-full {
    height: 100%;
  }
  .max-h-\[45px\] {
    max-height: 45px;
  }
  .max-h-\[50px\] {
    max-height: 50px;
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-\[12\.5\%\] {
    width: 12.5%;
  }
  .w-\[22\%\] {
    width: 22%;
  }
  .w-\[40\%\] {
    width: 40%;
  }
  .w-\[50\%\] {
    width: 50%;
  }
  .w-\[68\%\] {
    width: 68%;
  }
  .w-\[72\%\] {
    width: 72%;
  }
  .w-\[77\.5\%\] {
    width: 77.5%;
  }
  .w-full {
    width: 100%;
  }
  .max-w-3xs {
    max-width: var(--container-3xs);
  }
  .max-w-\[50lvh\] {
    max-width: 50lvh;
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .grow {
    flex-grow: 1;
  }
  .table-auto {
    table-layout: auto;
  }
  .table-fixed {
    table-layout: fixed;
  }
  .-translate-y-1 {
    --tw-translate-y: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0\.5 {
    --tw-translate-y: calc(var(--spacing) * 0.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .rotate-0 {
    rotate: 0deg;
  }
  .\[transform\:translateY\(-100\%\)\] {
    transform: translateY(-100%);
  }
  .\[transform\:translateY\(200\%\)\] {
    transform: translateY(200%);
  }
  .\[transform\:translateY\(400\%\)\] {
    transform: translateY(400%);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .\[appearance\:textfield\] {
    appearance: textfield;
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-items-center {
    justify-items: center;
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-y-0\.5 {
    row-gap: calc(var(--spacing) * 0.5);
  }
  .divide-x {
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 0;
      border-inline-style: var(--tw-border-style);
      border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
      border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    }
  }
  .divide-primary-800 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-primary-800);
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-3 {
    border-style: var(--tw-border-style);
    border-width: 3px;
  }
  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }
  .border-t-2 {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }
  .border-t-3 {
    border-top-style: var(--tw-border-style);
    border-top-width: 3px;
  }
  .border-t-4 {
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
  }
  .border-r-2 {
    border-right-style: var(--tw-border-style);
    border-right-width: 2px;
  }
  .border-r-3 {
    border-right-style: var(--tw-border-style);
    border-right-width: 3px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-b-3 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 3px;
  }
  .border-b-4 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 4px;
  }
  .border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-neutral-200 {
    border-color: var(--color-neutral-200);
  }
  .border-primary-50 {
    border-color: var(--color-primary-50);
  }
  .border-primary-200 {
    border-color: var(--color-primary-200);
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-t-primary-600 {
    border-top-color: var(--color-primary-600);
  }
  .border-r-transparent {
    border-right-color: transparent;
  }
  .border-b-error-400 {
    border-bottom-color: var(--color-error-400);
  }
  .border-b-neutral-100 {
    border-bottom-color: var(--color-neutral-100);
  }
  .border-b-neutral-200 {
    border-bottom-color: var(--color-neutral-200);
  }
  .border-b-transparent {
    border-bottom-color: transparent;
  }
  .border-l-neutral-200 {
    border-left-color: var(--color-neutral-200);
  }
  .bg-\[hsl\(210\,25\%\,98\%\)\] {
    background-color: hsl(210,25%,98%);
  }
  .bg-error-50 {
    background-color: var(--color-error-50);
  }
  .bg-inherit {
    background-color: inherit;
  }
  .bg-neutral-50 {
    background-color: var(--color-neutral-50);
  }
  .bg-neutral-100 {
    background-color: var(--color-neutral-100);
  }
  .bg-primary-50 {
    background-color: var(--color-primary-50);
  }
  .bg-primary-900 {
    background-color: var(--color-primary-900);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-gradient-to-l {
    --tw-gradient-position: to left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-primary-700 {
    --tw-gradient-from: var(--color-primary-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-primary-500 {
    --tw-gradient-via: var(--color-primary-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-\[percentage\:5\%_95\%\] {
    --tw-gradient-via-position: 5% 95%;
  }
  .to-primary-700 {
    --tw-gradient-to: var(--color-primary-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .fill-current {
    fill: currentcolor;
  }
  .fill-none {
    fill: none;
  }
  .fill-primary-50 {
    fill: var(--color-primary-50);
  }
  .stroke-current {
    stroke: currentcolor;
  }
  .stroke-neutral-400 {
    stroke: var(--color-neutral-400);
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-11 {
    padding-inline: calc(var(--spacing) * 11);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .pt-2\.5 {
    padding-top: calc(var(--spacing) * 2.5);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pr-3 {
    padding-right: calc(var(--spacing) * 3);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pb-14 {
    padding-bottom: calc(var(--spacing) * 14);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-plex {
    font-family: var(--font-plex);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-10 {
    --tw-leading: calc(var(--spacing) * 10);
    line-height: calc(var(--spacing) * 10);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-error-700 {
    color: var(--color-error-700);
  }
  .text-neutral-200 {
    color: var(--color-neutral-200);
  }
  .text-neutral-300 {
    color: var(--color-neutral-300);
  }
  .text-neutral-600 {
    color: var(--color-neutral-600);
  }
  .text-neutral-700 {
    color: var(--color-neutral-700);
  }
  .text-neutral-800 {
    color: var(--color-neutral-800);
  }
  .text-neutral-900 {
    color: var(--color-neutral-900);
  }
  .text-primary-50 {
    color: var(--color-primary-50);
  }
  .text-primary-100 {
    color: var(--color-primary-100);
  }
  .text-primary-800 {
    color: var(--color-primary-800);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-15 {
    opacity: 15%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-neutral-200 {
    --tw-ring-color: var(--color-neutral-200);
  }
  .ring-neutral-300 {
    --tw-ring-color: var(--color-neutral-300);
  }
  .ring-transparent {
    --tw-ring-color: transparent;
  }
  .transition-\[border-color\] {
    transition-property: border-color;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[border-color_opacity\] {
    transition-property: border-color opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[box-shadow_background-color_transform\] {
    transition-property: box-shadow background-color transform;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[transform_stroke\] {
    transition-property: transform stroke;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-700 {
    --tw-duration: 700ms;
    transition-duration: 700ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .will-change-transform {
    will-change: transform;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .\[transition\:filter_0\.25s\] {
    transition: filter 0.25s;
  }
  .\[transition\:height_0\.7s_eas\] {
    transition: height 0.7s eas;
  }
  .\[transition\:height_0\.7s_ease\] {
    transition: height 0.7s ease;
  }
  .\[transition\:transform_1s_ease-out\] {
    transition: transform 1s ease-out;
  }
  .\*\:mx-auto {
    :is(& > *) {
      margin-inline: auto;
    }
  }
  .\*\:my-3 {
    :is(& > *) {
      margin-block: calc(var(--spacing) * 3);
    }
  }
  .\*\:ml-6 {
    :is(& > *) {
      margin-left: calc(var(--spacing) * 6);
    }
  }
  .\*\:size-5 {
    :is(& > *) {
      width: calc(var(--spacing) * 5);
      height: calc(var(--spacing) * 5);
    }
  }
  .\*\:max-w-3xl {
    :is(& > *) {
      max-width: var(--container-3xl);
    }
  }
  .\*\:max-w-xl {
    :is(& > *) {
      max-width: var(--container-xl);
    }
  }
  .\*\:cursor-pointer {
    :is(& > *) {
      cursor: pointer;
    }
  }
  .\*\:list-disc {
    :is(& > *) {
      list-style-type: disc;
    }
  }
  .\*\:overflow-visible {
    :is(& > *) {
      overflow: visible;
    }
  }
  .\*\:fill-current {
    :is(& > *) {
      fill: currentcolor;
    }
  }
  .\*\:p-2\.5 {
    :is(& > *) {
      padding: calc(var(--spacing) * 2.5);
    }
  }
  .\*\:p-3 {
    :is(& > *) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .\*\:px-2 {
    :is(& > *) {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .\*\:px-4 {
    :is(& > *) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .\*\:py-2\.5 {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 2.5);
    }
  }
  .\*\:pr-4 {
    :is(& > *) {
      padding-right: calc(var(--spacing) * 4);
    }
  }
  .\*\:text-lg {
    :is(& > *) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .\*\:text-sm {
    :is(& > *) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .\*\:font-medium {
    :is(& > *) {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .\*\:font-semibold {
    :is(& > *) {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
  }
  .\*\:ring-2 {
    :is(& > *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .\*\:ring-transparent {
    :is(& > *) {
      --tw-ring-color: transparent;
    }
  }
  .\*\:transition-\[box-shadow_background-color_color\] {
    :is(& > *) {
      transition-property: box-shadow background-color color;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\*\:duration-500 {
    :is(& > *) {
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .\*\:select-none {
    :is(& > *) {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .\*\:ring-inset {
    :is(& > *) {
      --tw-ring-inset: inset;
    }
  }
  .\*\*\:origin-center {
    :is(& *) {
      transform-origin: center;
    }
  }
  .\*\*\:pb-2\.5 {
    :is(& *) {
      padding-bottom: calc(var(--spacing) * 2.5);
    }
  }
  .\*\*\:text-center {
    :is(& *) {
      text-align: center;
    }
  }
  .\*\*\:align-middle {
    :is(& *) {
      vertical-align: middle;
    }
  }
  .\*\*\:font-plex {
    :is(& *) {
      font-family: var(--font-plex);
    }
  }
  .\*\*\:text-sm {
    :is(& *) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .\*\*\:text-xs {
    :is(& *) {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .\*\*\:transition-all {
    :is(& *) {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\*\*\:transition-colors {
    :is(& *) {
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\*\*\:duration-300 {
    :is(& *) {
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .\*\*\:ease-out {
    :is(& *) {
      --tw-ease: var(--ease-out);
      transition-timing-function: var(--ease-out);
    }
  }
  .group-hover\:-translate-y-1\.5 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:translate-y-1 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:\[transition\:transform_0\.5s_ease-out\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        transition: transform 0.5s ease-out;
      }
    }
  }
  .group-hover\:\*\:border-b-neutral-300 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        :is(& > *) {
          border-bottom-color: var(--color-neutral-300);
        }
      }
    }
  }
  .group-focus\:\*\:border-b-neutral-300 {
    &:is(:where(.group):focus *) {
      :is(& > *) {
        border-bottom-color: var(--color-neutral-300);
      }
    }
  }
  .group-active\:-translate-y-0\.5 {
    &:is(:where(.group):active *) {
      --tw-translate-y: calc(var(--spacing) * -0.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-active\:translate-y-\[1px\] {
    &:is(:where(.group):active *) {
      --tw-translate-y: 1px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-active\:\[transition\:transform_0\.25s\] {
    &:is(:where(.group):active *) {
      transition: transform 0.25s;
    }
  }
  .group-\[\.active\]\:group-hover\:-rotate-180 {
    &:is(:where(.group):is(.active) *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          rotate: calc(180deg * -1);
        }
      }
    }
  }
  .group-\[\.active\]\:group-hover\:stroke-primary-800 {
    &:is(:where(.group):is(.active) *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-primary-800);
        }
      }
    }
  }
  .group-\[\.active\]\:group-focus-visible\:stroke-primary-800 {
    &:is(:where(.group):is(.active) *) {
      &:is(:where(.group):focus-visible *) {
        stroke: var(--color-primary-800);
      }
    }
  }
  .group-\[\.pdc-row-add\]\:translate-x-\[200\%\] {
    &:is(:where(.group):is(.pdc-row-add) *) {
      --tw-translate-x: 200%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-\[\.pdc-row-add\]\:translate-y-\[-200\%\] {
    &:is(:where(.group):is(.pdc-row-add) *) {
      --tw-translate-y: -200%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-\[\.pdc-row-add\]\:-rotate-180 {
    &:is(:where(.group):is(.pdc-row-add) *) {
      rotate: calc(180deg * -1);
    }
  }
  .group-\[\.pdc-row-add\]\:opacity-0 {
    &:is(:where(.group):is(.pdc-row-add) *) {
      opacity: 0%;
    }
  }
  .group-\[\.pdc-row-close\]\:rotate-0 {
    &:is(:where(.group):is(.pdc-row-close) *) {
      rotate: 0deg;
    }
  }
  .group-\[\.pdc-row-initial\]\:translate-x-\[200\%\] {
    &:is(:where(.group):is(.pdc-row-initial) *) {
      --tw-translate-x: 200%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-\[\.pdc-row-initial\]\:translate-y-\[-200\%\] {
    &:is(:where(.group):is(.pdc-row-initial) *) {
      --tw-translate-y: -200%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-\[\.pdc-row-initial\]\:-rotate-180 {
    &:is(:where(.group):is(.pdc-row-initial) *) {
      rotate: calc(180deg * -1);
    }
  }
  .group-\[\.pdc-row-initial\]\:\[transform\:translateX\(100\%\)\] {
    &:is(:where(.group):is(.pdc-row-initial) *) {
      transform: translateX(100%);
    }
  }
  .group-\[\.pdc-row-initial\]\:opacity-100 {
    &:is(:where(.group):is(.pdc-row-initial) *) {
      opacity: 100%;
    }
  }
  .group-\[\.pdc-row-open\]\:-rotate-180 {
    &:is(:where(.group):is(.pdc-row-open) *) {
      rotate: calc(180deg * -1);
    }
  }
  .selection\:bg-primary-800 {
    & *::selection {
      background-color: var(--color-primary-800);
    }
    &::selection {
      background-color: var(--color-primary-800);
    }
  }
  .selection\:text-neutral-50 {
    & *::selection {
      color: var(--color-neutral-50);
    }
    &::selection {
      color: var(--color-neutral-50);
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:-bottom-4 {
    &::after {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * -4);
    }
  }
  .after\:left-0 {
    &::after {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .after\:mt-1\.5 {
    &::after {
      content: var(--tw-content);
      margin-top: calc(var(--spacing) * 1.5);
    }
  }
  .after\:w-full {
    &::after {
      content: var(--tw-content);
      width: 100%;
    }
  }
  .after\:max-w-\[95\%\] {
    &::after {
      content: var(--tw-content);
      max-width: 95%;
    }
  }
  .after\:rounded-lg {
    &::after {
      content: var(--tw-content);
      border-radius: var(--radius-lg);
    }
  }
  .after\:border-b-3 {
    &::after {
      content: var(--tw-content);
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 3px;
    }
  }
  .after\:border-b-transparent {
    &::after {
      content: var(--tw-content);
      border-bottom-color: transparent;
    }
  }
  .after\:transition-colors {
    &::after {
      content: var(--tw-content);
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .after\:duration-500 {
    &::after {
      content: var(--tw-content);
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .after\:content-\[\'_\'\] {
    &::after {
      content: var(--tw-content);
      --tw-content: ' ';
      content: var(--tw-content);
    }
  }
  .after\:\[border-bottom\:8px_solid_transparent\] {
    &::after {
      content: var(--tw-content);
      border-bottom: 8px solid transparent;
    }
  }
  .focus-within\:after\:border-b-primary-800 {
    &:focus-within {
      &::after {
        content: var(--tw-content);
        border-bottom-color: var(--color-primary-800);
      }
    }
  }
  .hover\:-translate-y-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:cursor-pointer {
    &:hover {
      @media (hover: hover) {
        cursor: pointer;
      }
    }
  }
  .hover\:bg-primary-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-50);
      }
    }
  }
  .hover\:text-error-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-error-600);
      }
    }
  }
  .hover\:text-primary-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary-800);
      }
    }
  }
  .hover\:text-primary-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary-900);
      }
    }
  }
  .hover\:ring-primary-800 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-color: var(--color-primary-800);
      }
    }
  }
  .hover\:brightness-110 {
    &:hover {
      @media (hover: hover) {
        --tw-brightness: brightness(110%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .\*\:hover\:cursor-pointer {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          cursor: pointer;
        }
      }
    }
  }
  .\*\:hover\:bg-primary-50 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-primary-50);
        }
      }
    }
  }
  .\*\:hover\:bg-primary-900 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-primary-900);
        }
      }
    }
  }
  .\*\:hover\:text-primary-50 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-primary-50);
        }
      }
    }
  }
  .\*\:hover\:text-primary-800 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-primary-800);
        }
      }
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .\*\:focus\:outline-none {
    :is(& > *) {
      &:focus {
        --tw-outline-style: none;
        outline-style: none;
      }
    }
  }
  .focus-visible\:border-primary-800 {
    &:focus-visible {
      border-color: var(--color-primary-800);
    }
  }
  .focus-visible\:border-r-primary-800 {
    &:focus-visible {
      border-right-color: var(--color-primary-800);
    }
  }
  .focus-visible\:border-b-primary-800 {
    &:focus-visible {
      border-bottom-color: var(--color-primary-800);
    }
  }
  .focus-visible\:bg-primary-50 {
    &:focus-visible {
      background-color: var(--color-primary-50);
    }
  }
  .focus-visible\:text-error-600 {
    &:focus-visible {
      color: var(--color-error-600);
    }
  }
  .focus-visible\:text-primary-800 {
    &:focus-visible {
      color: var(--color-primary-800);
    }
  }
  .focus-visible\:ring-6 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(6px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-primary-800 {
    &:focus-visible {
      --tw-ring-color: var(--color-primary-800);
    }
  }
  .focus-visible\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .\*\:focus-visible\:\!bg-primary-50 {
    :is(& > *) {
      &:focus-visible {
        background-color: var(--color-primary-50) !important;
      }
    }
  }
  .\*\:focus-visible\:\!text-primary-800 {
    :is(& > *) {
      &:focus-visible {
        color: var(--color-primary-800) !important;
      }
    }
  }
  .\*\:focus-visible\:ring-6 {
    :is(& > *) {
      &:focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(6px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .\*\:focus-visible\:ring-primary-800 {
    :is(& > *) {
      &:focus-visible {
        --tw-ring-color: var(--color-primary-800);
      }
    }
  }
  .group-\[\.active\]\:focus-visible\:border-primary-800 {
    &:is(:where(.group):is(.active) *) {
      &:focus-visible {
        border-color: var(--color-primary-800);
      }
    }
  }
  .focus-visible\:after\:\!border-b-primary-800 {
    &:focus-visible {
      &::after {
        content: var(--tw-content);
        border-bottom-color: var(--color-primary-800) !important;
      }
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:border-r-transparent {
    &:disabled {
      border-right-color: transparent;
    }
  }
  .disabled\:border-b-transparent {
    &:disabled {
      border-bottom-color: transparent;
    }
  }
  .disabled\:\!text-neutral-800\/30 {
    &:disabled {
      color: color-mix(in srgb, hsl(211, 39%, 23%) 30%, transparent) !important;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-neutral-800) 30%, transparent) !important;
      }
    }
  }
  .has-checked\:border-r-success-400 {
    &:has(*:checked) {
      border-right-color: var(--color-success-400);
    }
  }
  .\*\:has-checked\:bg-primary-50 {
    :is(& > *) {
      &:has(*:checked) {
        background-color: var(--color-primary-50);
      }
    }
  }
  .\*\:has-checked\:bg-primary-900 {
    :is(& > *) {
      &:has(*:checked) {
        background-color: var(--color-primary-900);
      }
    }
  }
  .\*\:has-checked\:text-primary-50 {
    :is(& > *) {
      &:has(*:checked) {
        color: var(--color-primary-50);
      }
    }
  }
  .\*\:has-checked\:text-primary-800 {
    :is(& > *) {
      &:has(*:checked) {
        color: var(--color-primary-800);
      }
    }
  }
  .has-enabled\:opacity-100 {
    &:has(*:enabled) {
      opacity: 100%;
    }
  }
  .has-disabled\:hover\:cursor-not-allowed {
    &:has(*:disabled) {
      &:hover {
        @media (hover: hover) {
          cursor: not-allowed;
        }
      }
    }
  }
  .sm\:mr-6 {
    @media (width >= 40rem) {
      margin-right: calc(var(--spacing) * 6);
    }
  }
  .sm\:ml-3 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 3);
    }
  }
  .sm\:ml-4 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 4);
    }
  }
  .sm\:ml-\[10\%\] {
    @media (width >= 40rem) {
      margin-left: 10%;
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:inline-block {
    @media (width >= 40rem) {
      display: inline-block;
    }
  }
  .sm\:size-5 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 5);
      height: calc(var(--spacing) * 5);
    }
  }
  .sm\:size-6 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 6);
      height: calc(var(--spacing) * 6);
    }
  }
  .sm\:size-8 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 8);
      height: calc(var(--spacing) * 8);
    }
  }
  .sm\:h-\[var\(--row-location-open-sm\)\] {
    @media (width >= 40rem) {
      height: var(--row-location-open-sm);
    }
  }
  .sm\:max-h-\[60px\] {
    @media (width >= 40rem) {
      max-height: 60px;
    }
  }
  .sm\:w-\[75\%\] {
    @media (width >= 40rem) {
      width: 75%;
    }
  }
  .sm\:max-w-2xs {
    @media (width >= 40rem) {
      max-width: var(--container-2xs);
    }
  }
  .sm\:max-w-full {
    @media (width >= 40rem) {
      max-width: 100%;
    }
  }
  .sm\:flex-col {
    @media (width >= 40rem) {
      flex-direction: column;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:justify-between {
    @media (width >= 40rem) {
      justify-content: space-between;
    }
  }
  .sm\:justify-items-normal {
    @media (width >= 40rem) {
      justify-items: normal;
    }
  }
  .sm\:justify-items-start {
    @media (width >= 40rem) {
      justify-items: start;
    }
  }
  .sm\:pr-12 {
    @media (width >= 40rem) {
      padding-right: calc(var(--spacing) * 12);
    }
  }
  .sm\:text-left {
    @media (width >= 40rem) {
      text-align: left;
    }
  }
  .sm\:text-base {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .sm\:text-sm {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .md\:max-w-xs {
    @media (width >= 48rem) {
      max-width: var(--container-xs);
    }
  }
  .md\:text-4xl {
    @media (width >= 48rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .print\:m-0 {
    @media print {
      margin: calc(var(--spacing) * 0);
    }
  }
  .print\:block {
    @media print {
      display: block;
    }
  }
  .print\:hidden {
    @media print {
      display: none;
    }
  }
  .print\:bg-white {
    @media print {
      background-color: var(--color-white);
    }
  }
  .print\:p-0 {
    @media print {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\[\&_\.down\]\:\[transform\:translateY\(15\%\)\] {
    & .down {
      transform: translateY(15%);
    }
  }
  .\[\&_\.land\]\:fill-neutral-800 {
    & .land {
      fill: var(--color-neutral-800);
    }
  }
  .hover\:\[\&_\.land\]\:fill-primary-800 {
    &:hover {
      @media (hover: hover) {
        & .land {
          fill: var(--color-primary-800);
        }
      }
    }
  }
  .focus-visible\:\[\&_\.land\]\:fill-primary-800 {
    &:focus-visible {
      & .land {
        fill: var(--color-primary-800);
      }
    }
  }
  .\[\&_\.state\]\:fill-neutral-800 {
    & .state {
      fill: var(--color-neutral-800);
    }
  }
  .\[\&_\.state\]\:stroke-neutral-100 {
    & .state {
      stroke: var(--color-neutral-100);
    }
  }
  .hover\:\[\&_\.state\]\:fill-primary-800 {
    &:hover {
      @media (hover: hover) {
        & .state {
          fill: var(--color-primary-800);
        }
      }
    }
  }
  .hover\:\[\&_\.state\]\:stroke-primary-100 {
    &:hover {
      @media (hover: hover) {
        & .state {
          stroke: var(--color-primary-100);
        }
      }
    }
  }
  .focus-visible\:\[\&_\.state\]\:fill-primary-800 {
    &:focus-visible {
      & .state {
        fill: var(--color-primary-800);
      }
    }
  }
  .focus-visible\:\[\&_\.state\]\:stroke-primary-100 {
    &:focus-visible {
      & .state {
        stroke: var(--color-primary-100);
      }
    }
  }
  .\[\&_\.up\]\:\[transform\:translateY\(-15\%\)\] {
    & .up {
      transform: translateY(-15%);
    }
  }
  .\[\&_\.water\]\:fill-neutral-100 {
    & .water {
      fill: var(--color-neutral-100);
    }
  }
  .hover\:\[\&_\.water\]\:fill-primary-100 {
    &:hover {
      @media (hover: hover) {
        & .water {
          fill: var(--color-primary-100);
        }
      }
    }
  }
  .focus-visible\:\[\&_\.water\]\:fill-primary-100 {
    &:focus-visible {
      & .water {
        fill: var(--color-primary-100);
      }
    }
  }
  .group-not-\[\.pdc-row-close\]\:hover\:\[\&_button_svg\]\:\!-rotate-0 {
    &:is(:where(.group):not(*:is(.pdc-row-close)) *) {
      &:hover {
        @media (hover: hover) {
          & button svg {
            rotate: calc(0deg * -1) !important;
          }
        }
      }
    }
  }
  .group-\[\.pdc-row-close\]\:hover\:\[\&_button_svg\]\:\!-rotate-180 {
    &:is(:where(.group):is(.pdc-row-close) *) {
      &:hover {
        @media (hover: hover) {
          & button svg {
            rotate: calc(180deg * -1) !important;
          }
        }
      }
    }
  }
  .\[\&_li\]\:hidden {
    & li {
      display: none;
    }
  }
  .\[\&_li\]\:border-b-transparent {
    & li {
      border-bottom-color: transparent;
    }
  }
  .\[\&_li\]\:first\:inline-block {
    & li {
      &:first-child {
        display: inline-block;
      }
    }
  }
  .\[\&_li\]\:first\:border-b-2 {
    & li {
      &:first-child {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 2px;
      }
    }
  }
  .\[\&_li\]\:first\:pb-2 {
    & li {
      &:first-child {
        padding-bottom: calc(var(--spacing) * 2);
      }
    }
  }
  .sm\:\[\&_li\]\:mb-2 {
    @media (width >= 40rem) {
      & li {
        margin-bottom: calc(var(--spacing) * 2);
      }
    }
  }
  .sm\:\[\&_li\]\:inline-block {
    @media (width >= 40rem) {
      & li {
        display: inline-block;
      }
    }
  }
  .sm\:\[\&_li\]\:first\:hidden {
    @media (width >= 40rem) {
      & li {
        &:first-child {
          display: none;
        }
      }
    }
  }
  .sm\:\[\&_li\]\:first\:border-none {
    @media (width >= 40rem) {
      & li {
        &:first-child {
          --tw-border-style: none;
          border-style: none;
        }
      }
    }
  }
  .sm\:\[\&_li\]\:first\:pb-0 {
    @media (width >= 40rem) {
      & li {
        &:first-child {
          padding-bottom: calc(var(--spacing) * 0);
        }
      }
    }
  }
  .sm\:\[\&_li\]\:last\:border-b-2 {
    @media (width >= 40rem) {
      & li {
        &:last-child {
          border-bottom-style: var(--tw-border-style);
          border-bottom-width: 2px;
        }
      }
    }
  }
  .sm\:\[\&_li\]\:last\:pb-2 {
    @media (width >= 40rem) {
      & li {
        &:last-child {
          padding-bottom: calc(var(--spacing) * 2);
        }
      }
    }
  }
  .group-\[\.active\]\:focus-visible\:\[\&_svg\]\:-rotate-180 {
    &:is(:where(.group):is(.active) *) {
      &:focus-visible {
        & svg {
          rotate: calc(180deg * -1);
        }
      }
    }
  }
  .\[\&_td\]\:p-3 {
    & td {
      padding: calc(var(--spacing) * 3);
    }
  }
  .\[\&_tr\]\:border-b-2 {
    & tr {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 2px;
    }
  }
  .\[\&\.active_\.down\]\:\[transform\:scaleY\(-1\)_translateY\(-70\%\)\] {
    &.active .down {
      transform: scaleY(-1) translateY(-70%);
    }
  }
  .\[\&\.active_\.up\]\:\[transform\:scaleY\(-1\)_translateY\(70\%\)\] {
    &.active .up {
      transform: scaleY(-1) translateY(70%);
    }
  }
  .\[\&\:\:-webkit-calendar-picker-indicator\:focus\]\:border-b-primary-800 {
    &::-webkit-calendar-picker-indicator:focus {
      border-bottom-color: var(--color-primary-800);
    }
  }
  .\[\&\:\:-webkit-inner-spin-button\]\:appearance-none {
    &::-webkit-inner-spin-button {
      appearance: none;
    }
  }
  .\[\&\:\:-webkit-outer-spin-button\]\:appearance-none {
    &::-webkit-outer-spin-button {
      appearance: none;
    }
  }
  .\[\.active\]\:z-50 {
    &:is(.active) {
      z-index: 50;
    }
  }
  .\[\.active\]\:flex {
    &:is(.active) {
      display: flex;
    }
  }
  .\[\.active\]\:translate-y-16 {
    &:is(.active) {
      --tw-translate-y: calc(var(--spacing) * 16);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\[\.active\]\:opacity-100 {
    &:is(.active) {
      opacity: 100%;
    }
  }
  .\[\.disabled\]\:cursor-not-allowed {
    &:is(.disabled) {
      cursor: not-allowed;
    }
  }
  .\[\.disabled\]\:\*\*\:opacity-30 {
    &:is(.disabled) {
      :is(& *) {
        opacity: 30%;
      }
    }
  }
  .\[\.error\]\:border-r-error-400 {
    &:is(.error) {
      border-right-color: var(--color-error-400);
    }
  }
  .\[\.pdc-row-initial\]\:h-\[var\(--row-location-open\)\] {
    &:is(.pdc-row-initial) {
      height: var(--row-location-open);
    }
  }
  .sm\:\[\.pdc-row-initial\]\:h-\[var\(--row-location-open-sm\)\] {
    @media (width >= 40rem) {
      &:is(.pdc-row-initial) {
        height: var(--row-location-open-sm);
      }
    }
  }
  .\[\.success\]\:border-r-success-400 {
    &:is(.success) {
      border-right-color: var(--color-success-400);
    }
  }
  .\[\&\>a\]\:ml-5 {
    &>a {
      margin-left: calc(var(--spacing) * 5);
    }
  }
  .\[\&\>a\]\:list-item {
    &>a {
      display: list-item;
    }
  }
  .\[\&\>a\]\:pl-2\.5 {
    &>a {
      padding-left: calc(var(--spacing) * 2.5);
    }
  }
}
html {
  scroll-behavior: smooth;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-divide-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
    }
  }
}
